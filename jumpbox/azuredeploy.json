{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
          "type": "string",
          "metadata": {
            "description": "This is the username you wish to assign to your VMs admin account"
          }
        },
        "adminPassword": {
          "defaultValue": null,
          "type": "securestring",
          "metadata": {
            "description": "This is the password you wish to assign to your VMs admin account"
          }
        },
        "centOSVersion": {
          "type": "string",
          "defaultValue": "7.2",
          "metadata": {
            "description": "The CentOS version for the VM. Allowed values: 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7_8."
          }
        },
        "imageVersion": {
          "type": "string",
          "defaultValue": "latest",
          "metadata": {
            "desription": "Version of the image."
          }
        },
        "vmDnsPrefix": {
          "defaultValue": null,
          "type": "string"
        },
        "vmSize": {
          "type": "string",
          "defaultValue": "Standard_A2",
          "metadata": {
            "description": "Size of VM"
          }
        },
        "virtualNetworkName": {
          "defaultValue": null,
          "type": "string"
        },
        "vnetRg": {
          "defaultValue": null,
          "type": "string"
        },
        "subnetName": {
          "defaultValue": null,
          "type": "string"
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "environment": {
          "defaultValue": "",
          "type": "string"
        },
        "dataDiskSizeInGB": {
          "defaultValue": null,
          "type": "string"
        },
        "sshkeyData": {
          "type": "string",
          "defaultValue": null,
          "metadata": {
            "description": "SSH rsa public key file as a string."
          }
        },
        "pip_name_dns": {
          "defaultValue": null,
          "type": "string",
          "metadata": {
            "description": "public ip address 1 name"
          }
        },
        "TagServerType": {
          "defaultValue": "Unknown",
          "type": "string",
          "metadata": {
            "description": "ServerType tag"
          }
        },
        "TagServerRole": {
          "defaultValue": "Unknown",
          "type": "string",
          "metadata": {
            "description": "ServerRole tag"
          }
        },
        "TagEnvironment": {
          "defaultValue": "Unknown",
          "type": "string",
          "metadata": {
            "description": "Environment tag"
          }
        },
        "TmplTimestamp": {
          "type": "string"
        }
    },
    "variables": {
      "_comment1": "If you need a comments in those arm templates, you could do it this way with variables",
      "azureCloudAppDomain": "cloudapp.azure.com",
      "imagePublisher": "OpenLogic",
      "imageOffer": "CentOS",
      "storageAccountType": "StandardSSD_LRS",
      "apiVersion": "2015-06-15",
      "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "subscriptionId": "[subscription().subscriptionId]",
      "vnetId": "[concat('/subscriptions/',variables('subscriptionId'),'/resourceGroups/',parameters('vnetRg'),'/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('subnetName'))]"
    },
    "resources": [
        {
          "comments": "Availability Set",
          "metadata": {
            "description": "foo"
          },
          "sku": {
              "name": "Aligned"
          },
          "type": "Microsoft.Compute/availabilitySets",
          "name": "[concat(parameters('vmDnsPrefix'),parameters('environment'),'-as')]",
          "apiVersion": "2018-06-01",
          "location": "[resourceGroup().location]",
          "tags": { },
          "properties": {
            "platformUpdateDomainCount": 5,
            "platformFaultDomainCount": 3
          },
          "dependsOn": [ ]
        },
        {
          "comments": "Virtual machine",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'))]",
          "apiVersion": "2018-04-01",
          "location": "[resourceGroup().location]",
          "tags": {
            "ServerType": "[parameters('TagServerType')]",
            "ServerRole": "[parameters('TagServerRole')]",
            "Environment": "[parameters('TagEnvironment')]"
          },
          "properties": {
            "availabilitySet": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('vmDnsPrefix'),parameters('environment'),'-as'))]"
            },
            "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[variables('imagePublisher')]",
                "offer": "[variables('imageOffer')]",
                "sku": "[parameters('centOSVersion')]",
                "version": "[parameters('imageVersion')]"
              },
              "osDisk": {
                "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-os')]",
                "createOption": "FromImage",
                "managedDisk": {
                  "storageAccountType": "[variables('storageAccountType')]"
                },
                "caching": "ReadWrite"
              },
              "dataDisks": [
                {
                  "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-datadisk1')]",
                  "createOption": "attach",
                  "diskSizeGB": "[parameters('dataDiskSizeInGB')]",
                  "lun": 0,
                  "managedDisk": {
                    "id": "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-datadisk1'))]"
                  },
                  "caching": "None"
                }
              ]
            },
            "osProfile": {
              "computerName": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'))]",
              "adminUsername": "[parameters('adminUsername')]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                  "publicKeys": [
                    {
                      "path": "[variables('sshKeyPath')]",
                      "keyData": "[parameters('sshKeyData')]"
                    }
                  ]
                }
              },
              "secrets": [ ],
              "adminPassword": "[parameters('adminPassword')]"
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-nic',copyIndex()))]"
                }
              ]
            }
          },
          "copy": {
              "name": "vmCopy",
              "count": "[parameters('numberOfInstances')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('vmDnsPrefix'),parameters('environment'),'-as'))]",
            "[resourceId('Microsoft.Compute/disks/', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-datadisk1'))]",
            "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-nic',copyIndex()))]"
          ]
        },
        {
          "type": "Microsoft.Compute/disks",
          "apiVersion": "2018-06-01",
          "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-datadisk1')]",
          "location": "[resourceGroup().location]",
          "sku": {
            "name": "Standard_LRS"
          },
          "properties": {
            "creationData": {
              "createOption": "Empty"
            },
          "diskSizeGB": "[parameters('dataDiskSizeInGB')]"
          },
          "copy": {
              "name": "diskCopy",
              "count": "[parameters('numberOfInstances')]"
          }
        },
        {
          "comments": "Network interface",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-nic',copyIndex())]",
          "apiVersion": "[variables('apiVersion')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "ipConfigurations": [
              {
                "name": "[concat('Nic-IP-config')]",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('subnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-pip1'))]"
                  }
                }
              }
            ],
            "dnsSettings": {
              "dnsServers": [ ]
            },
            "enableIPForwarding": false,
            "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmDnsPrefix'),parameters('environment'),'-nsg1'))]"
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-pip1'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmDnsPrefix'),parameters('environment'),'-nsg1'))]"
          ],
          "copy": {
              "name": "nicCopy",
              "count": "[parameters('numberOfInstances')]"
          }
        },
        {
            "comments": "Network Security Group",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmDnsPrefix'),parameters('environment'),'-nsg1')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSSHInBound",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Public IP",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmDnsPrefix'),copyIndex(1),parameters('environment'),'-pip1')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pip_name_dns')]",
                    "reverseFqdn": "[concat(parameters('pip_name_dns'), '.', resourceGroup().location, '.', variables('azureCloudAppDomain'))]"
                }
            },
            "copy": {
              "name": "pipCopy",
              "count": "[parameters('numberOfInstances')]"
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmDnsPrefix'), copyIndex(1),parameters('environment'), '/azureVmUtils')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmDnsPrefix'), copyIndex(1),parameters('environment')))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": "[int(parameters('TmplTimestamp'))]"
                },
                "protectedSettings": {
                  "script": ""
                }
            },
            "copy": {
              "name": "scriptCopy",
              "count": "[parameters('numberOfInstances')]"
            }
        }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmDnsPrefix'),'1',parameters('environment'),'-pip1'))).dnsSettings.fqdn]",
            "type": "string"
        }
    }
}
